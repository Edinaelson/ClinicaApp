@page "/clientes"
@inject Data.ApplicationDbContext Db

<h3>Adicionar Cliente</h3>

<EditForm Model="@cliente" OnValidSubmit="SalvarCliente">
    <DataAnnotationsValidator />

    <RadzenFormField Text="Nome" Style="width: 100%; max-width: 400px;">
        <RadzenTextBox @bind-Value="cliente.Nome" Name="Nome" Class="w-100"/>
    </RadzenFormField>
    <RadzenFormField Text="Email" Style="width: 100%; max-width: 400px;">
        <RadzenTextBox @bind-Value="cliente.Email" Name="Email" Class="w-100"/>
    </RadzenFormField>
    <RadzenFormField Text="Telefone" Style="width: 100%; max-width: 400px;">
        <RadzenTextBox @bind-Value="cliente.Telefone" Name="Telefone" Class="w-100"/>
    </RadzenFormField>
    <RadzenFormField Text="Data De Nascimento" Style="width: 100%; max-width: 400px;">
        <RadzenDatePicker @bind-Value="cliente.DataNascimento" Name="DataNascimento" Class="w-100"/>
    </RadzenFormField>

    <br/>

    <RadzenButton ButtonType="ButtonType.Submit" Text="Salvar" ButtonStyle="ButtonStyle.Primary"/>
</EditForm>

@if (mensagemSucesso is not null)
{
    <RadzenAlert AllowClose="true" AlertStyle="AlertStyle.Success" ShowIcon="true" Variant="Variant.Filled" Class="mt-3">
        @mensagemSucesso
    </RadzenAlert>
}

@code {
    private Cliente cliente = new();
    private string? mensagemSucesso;

    private async Task SalvarCliente()
    {
        try
        {
            Db.Clientes.Add(cliente);
            await Db.SaveChangesAsync();

            mensagemSucesso = "Cliente salvo com sucesso!";
            cliente = new(); // limpa o formulário
        }
        catch (Exception ex)
        {
            Console.WriteLine("Erro ao salvar cliente: " + ex.Message);
        }
    }
}