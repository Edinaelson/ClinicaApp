@page "/procedimentos"
@using ClinicApp.Data
@using ClinicApp.Pages.Dialog.Procedimentos
@using Microsoft.EntityFrameworkCore
@inject ApplicationDbContext Db
@inject NavigationManager Navigation
@inject DialogService DialogService

<RadzenHeading Size="H3" Text="Procedimentos dispon√≠veis" />

<div></div>
<RadzenTextBox @bind-Value="filtro" Placeholder="üîç Pesquisar procedimento..." Style="width: 300px; margin-bottom: 20px;" />

<RadzenRow>
    @foreach (var item in Procedimento.Where(p => string.IsNullOrEmpty(filtro) || p.Nome.Contains(filtro, StringComparison.OrdinalIgnoreCase)))
    {
        <RadzenColumn Width="3">
            <RadzenCard Style="margin-bottom: 1rem; width: 190px;">
                <img src="@item.UrlImage" alt="@item.Nome" style="width: 100%; height: 100px; object-fit: cover;" />
                <div class="p-2">
                    <h6>@item.Nome</h6>
                    <p>Pre√ßo: @item.Preco.ToString("C")</p>
                    <RadzenButton Text="Agendar" Click="@(() => Agendar(item.Id))" Style="width: 100%;" />
                </div>
            </RadzenCard>
        </RadzenColumn>
    }

</RadzenRow>

<!-- Bot√£o flutuante -->
<div style="position: fixed; bottom: 20px; right: 20px; z-index: 1000;">
    <RadzenButton
        Text="Adicionar"
        Icon="add"
        ButtonStyle="ButtonStyle.Primary"
        Size="ButtonSize.Medium"
        Click="@AbrirDialog" />
</div>

@code {
    List<Procedimento> Procedimento;
    string filtro = "";

    protected override async Task OnInitializedAsync()
    {
        Procedimento = await Db.Procedimentos.ToListAsync();
    }

    void Agendar(int id)
    {
        Navigation.NavigateTo($"/agendamento/{id}");
    }
    
    async Task AbrirDialog()
    {
        var result = await DialogService.OpenAsync<AddProcedimento>(
            "Novo Procedimento",
            null,
            new DialogOptions() { Width = "500px", Height = "auto" }
        );

        // Atualiza lista se salvar
        if (result is Procedimento novo)
        {
            Procedimento.Add(novo);
            StateHasChanged();
        }
    }
}

